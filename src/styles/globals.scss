@use 'variables' as *;

// CSS Reset and Base Styles
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 16px;
  scroll-behavior: smooth;
}

body {
  font-family: $font-family;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1.6;
  color: color(text-primary);
  background-color: color(bg-secondary);
  font-size: font-size(base);
}

// Utility Classes
.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-center {
  justify-content: center;
}

.gap-1 { gap: space(1); }
.gap-2 { gap: space(2); }
.gap-3 { gap: space(3); }
.gap-4 { gap: space(4); }
.gap-6 { gap: space(6); }

.text-xs { font-size: font-size(xs); }
.text-sm { font-size: font-size(sm); }
.text-base { font-size: font-size(base); }
.text-lg { font-size: font-size(lg); }
.text-xl { font-size: font-size(xl); }
.text-2xl { font-size: font-size(2xl); }

.font-normal { font-weight: font-weight(normal); }
.font-medium { font-weight: font-weight(medium); }
.font-semibold { font-weight: font-weight(semibold); }
.font-bold { font-weight: font-weight(bold); }

.rounded-sm { border-radius: radius(sm); }
.rounded { border-radius: radius(base); }
.rounded-md { border-radius: radius(md); }
.rounded-lg { border-radius: radius(lg); }
.rounded-xl { border-radius: radius(xl); }

// Status color classes
.text-success { color: color(success); }
.text-warning { color: color(warning); }
.text-error { color: color(error); }
.text-info { color: color(info); }

.bg-success-light { background-color: color(success-light); }
.bg-warning-light { background-color: color(warning-light); }
.bg-error-light { background-color: color(error-light); }
.bg-info-light { background-color: color(info-light); }

// Focus States
.focus-visible {
  outline: 2px solid color(primary);
  outline-offset: 2px;
}

// Button Base Styles
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: space(2);
  padding: space(2) space(4);
  border: 1px solid transparent;
  border-radius: radius(md);
  font-size: font-size(sm);
  font-weight: font-weight(medium);
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
  
  &:focus {
    outline: 2px solid color(primary);
    outline-offset: 2px;
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

.btn-primary {
  background-color: color(primary);
  color: white;
  
  &:hover:not(:disabled) {
    background-color: color(primary-dark);
  }
}

.btn-secondary {
  background-color: color(bg-card);
  color: color(text-secondary);
  border-color: color(border-medium);
  
  &:hover:not(:disabled) {
    background-color: color(bg-hover);
    color: color(text-primary);
    border-color: color(primary);
  }
}

// Input Styles
.input {
  width: 100%;
  padding: space(3) space(4);
  border: 1px solid color(border-light);
  border-radius: radius(md);
  background-color: color(bg-card);
  color: color(text-primary);
  font-size: font-size(sm);
  transition: all 0.2s ease;
  
  &:focus {
    outline: none;
    border-color: color(primary);
    box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
  }
  
  &::placeholder {
    color: color(text-tertiary);
  }
}

// Card Styles
.card {
  background-color: color(bg-card);
  border: 1px solid color(border-light);
  border-radius: radius(xl);
  box-shadow: shadow(sm);
  transition: all 0.3s ease;
  
  &:hover {
    box-shadow: shadow(md);
  }
}

// Status Dot
.status-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  flex-shrink: 0;
  
  &.success {
    background-color: color(success);
  }
  
  &.warning {
    background-color: color(warning);
  }
  
  &.error {
    background-color: color(error);
  }
  
  &.info {
    background-color: color(info);
  }
  
  &.progress {
    background-color: color(progress);
  }
  
  &.pending {
    background-color: color(pending);
  }
}

// Status Badge
.status-badge {
  display: inline-flex;
  align-items: center;
  gap: space(2);
  padding: space(1) space(3);
  border-radius: radius(2xl);
  font-size: font-size(xs);
  font-weight: font-weight(medium);
  text-transform: capitalize;
  
  &.success {
    background-color: color(success-light);
    color: color(success);
  }
  
  &.warning {
    background-color: color(warning-light);
    color: color(warning);
  }
  
  &.error {
    background-color: color(error-light);
    color: color(error);
  }
  
  &.info {
    background-color: color(info-light);
    color: color(info);
  }
  
  &.progress {
    background-color: rgba(139, 92, 246, 0.1);
    color: color(progress);
  }
  
  &.pending {
    background-color: color(warning-light);
    color: color(warning);
  }
}

// Avatar
.avatar {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  object-fit: cover;
  border: 2px solid color(border-light);
  
  &.sm {
    width: 24px;
    height: 24px;
  }
  
  &.lg {
    width: 40px;
    height: 40px;
  }
  
  &.xl {
    width: 48px;
    height: 48px;
  }
}

// Scrollbar Styling
::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

::-webkit-scrollbar-track {
  background: color(bg-secondary);
}

::-webkit-scrollbar-thumb {
  background: color(border-medium);
  border-radius: radius(sm);
}

::-webkit-scrollbar-thumb:hover {
  background: color(border-dark);
}

// Animations
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideIn {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

// Responsive breakpoints are now in _variables.scss
